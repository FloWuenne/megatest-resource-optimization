process {
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:BARRNAP' {
    cpus = { 3 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:BARRNAPSUMMARY' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:CUTADAPT_WORKFLOW:CUTADAPT_BASIC' {
    cpus = { 4 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:CUTADAPT_WORKFLOW:CUTADAPT_SUMMARY_MERGE' {
    cpus = { 2 * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:CUTADAPT_WORKFLOW:CUTADAPT_SUMMARY_STD' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:DADA2_DENOISING' {
    cpus = { 3 * task.attempt }
    memory = { 2.GB * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:DADA2_ERR' {
    cpus = { 4 * task.attempt }
    memory = { 3.GB * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:DADA2_MERGE' {
    cpus = { 2 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:DADA2_PREPROCESSING:DADA2_FILTNTRIM' {
    cpus = { 2 * task.attempt }
    memory = { 2.GB * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:DADA2_PREPROCESSING:DADA2_QUALITY1' {
    cpus = { 2 * task.attempt }
    memory = { 2.GB * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:DADA2_PREPROCESSING:DADA2_QUALITY2' {
    cpus = { 2 * task.attempt }
    memory = { 2.GB * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:DADA2_PREPROCESSING:TRUNCLEN' {
    cpus = { 2 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:DADA2_RMCHIMERA' {
    cpus = { 5 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:DADA2_STATS' {
    cpus = { 2 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:DADA2_TAXONOMY_WF:DADA2_ADDSPECIES' {
    cpus = { 2 * task.attempt }
    memory = { 22.GB * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:DADA2_TAXONOMY_WF:DADA2_TAXONOMY' {
    cpus = { 15 * task.attempt }
    memory = { 3.GB * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:FASTQC' {
    cpus = { 3 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:FILTER_STATS' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:FORMAT_TAXONOMY' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:MERGE_STATS_FILTERTAXA' {
    cpus = { 6 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:MERGE_STATS_STD' {
    cpus = { 6 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:METADATA_ALL' {
    cpus = { 2 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:METADATA_PAIRWISE' {
    cpus = { 3 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:MULTIQC' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:PHYLOSEQ_INTAX_QIIME2' {
    cpus = { 4 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:PICRUST' {
    cpus = { 4 * task.attempt }
    memory = { 15.GB * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:QIIME2_ANCOM:QIIME2_ANCOMBC_ASV' {
    cpus = { 2 * task.attempt }
    memory = { 2.GB * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:QIIME2_ANCOM:QIIME2_ANCOMBC_TAX' {
    cpus = { 2 * task.attempt }
    memory = { 2.GB * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:QIIME2_ANCOM:QIIME2_ANCOM_ASV' {
    cpus = { 2 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:QIIME2_ANCOM:QIIME2_ANCOM_TAX' {
    cpus = { 2 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:QIIME2_ANCOM:QIIME2_FILTERSAMPLES_ANCOM' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:QIIME2_BARPLOT' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:QIIME2_BARPLOTAVG:QIIME2_BPAVG' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:QIIME2_BARPLOTAVG:QIIME2_FEATURETABLE_GROUP' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:QIIME2_BARPLOTAVG:QIIME2_INASV_BPAVG' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:QIIME2_DIVERSITY:QIIME2_ALPHARAREFACTION' {
    cpus = { 2 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:QIIME2_DIVERSITY:QIIME2_DIVERSITY_ADONIS' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:QIIME2_DIVERSITY:QIIME2_DIVERSITY_ALPHA' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:QIIME2_DIVERSITY:QIIME2_DIVERSITY_BETA' {
    cpus = { 8 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:QIIME2_DIVERSITY:QIIME2_DIVERSITY_BETAORD' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:QIIME2_DIVERSITY:QIIME2_DIVERSITY_CORE' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:QIIME2_DIVERSITY:QIIME2_TREE' {
    cpus = { 2 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:QIIME2_EXPORT:COMBINE_TABLE_DADA2' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:QIIME2_EXPORT:COMBINE_TABLE_QIIME2' {
    cpus = { 2 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:QIIME2_EXPORT:QIIME2_EXPORT_ABSOLUTE' {
    cpus = { 2 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:QIIME2_EXPORT:QIIME2_EXPORT_RELASV' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:QIIME2_EXPORT:QIIME2_EXPORT_RELTAX' {
    cpus = { 2 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:QIIME2_INASV' {
    cpus = { 2 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:QIIME2_INSEQ' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:QIIME2_INTAX' {
    cpus = { 2 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:QIIME2_PREPTAX:FORMAT_TAXONOMY_QIIME' {
    cpus = { 1 * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:QIIME2_PREPTAX:QIIME2_EXTRACT' {
    cpus = { 3 * task.attempt }
    memory = { 3.GB * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:QIIME2_PREPTAX:QIIME2_TRAIN' {
    cpus = { 2 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:QIIME2_SEQFILTERTABLE' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:QIIME2_TABLEFILTERTAXA' {
    cpus = { 2 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:QIIME2_TAXONOMY:QIIME2_CLASSIFY' {
    cpus = { 3 * task.attempt }
    memory = { 6.GB * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:QIIME2_TAXONOMY:QIIME2_INSEQ' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:RENAME_RAW_DATA_FILES' {
    cpus = { 2 * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:ROBJECT_WORKFLOW:PHYLOSEQ' {
    cpus = { 2 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:ROBJECT_WORKFLOW:PHYLOSEQ_INASV' {
    cpus = { 1 * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:ROBJECT_WORKFLOW:TREESUMMARIZEDEXPERIMENT' {
    cpus = { 2 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_AMPLISEQ:AMPLISEQ:SUMMARY_REPORT' {
    cpus = { 2 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  errorStrategy = 'retry'
  maxRetries = 2
}
