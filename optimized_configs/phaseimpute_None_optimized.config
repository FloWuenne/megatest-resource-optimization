process {
  withName: 'NFCORE_PHASEIMPUTE:CHRCHECK_INPUT:BAM_CHR_EXTRACT' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_PHASEIMPUTE:CHRCHECK_PANEL:VCF_CHR_EXTRACT' {
    cpus = { 2 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_PHASEIMPUTE:CHRCHECK_TRUTH:VCF_CHR_EXTRACT' {
    cpus = { 5 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:BAM_DOWNSAMPLE_SAMTOOLS:GAWK' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:BAM_DOWNSAMPLE_SAMTOOLS:SAMTOOLS_DEPTH' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:BAM_DOWNSAMPLE_SAMTOOLS:SAMTOOLS_VIEW' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:BAM_IMPUTE_GLIMPSE2:BCFTOOLS_INDEX_1' {
    cpus = { 73 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:BAM_IMPUTE_GLIMPSE2:BCFTOOLS_INDEX_2' {
    cpus = { 29 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:BAM_IMPUTE_GLIMPSE2:GLIMPSE2_LIGATE' {
    cpus = { 2 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:BAM_IMPUTE_GLIMPSE2:GLIMPSE2_PHASE' {
    cpus = { 2 * task.attempt }
    memory = { 3.GB * task.attempt }
  }
  withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:BCFTOOLS_QUERY_IMPUTED' {
    cpus = { 34 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:BCFTOOLS_QUERY_TRUTH' {
    cpus = { 12 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:BCFTOOLS_STATS_PANEL' {
    cpus = { 2 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:BCFTOOLS_STATS_TOOLS' {
    cpus = { 2 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:BCFTOOLS_STATS_TRUTH' {
    cpus = { 2 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:CONCAT_GLIMPSE2:BCFTOOLS_CONCAT' {
    cpus = { 2 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:CONCAT_PANEL:BCFTOOLS_CONCAT' {
    cpus = { 3 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:FILTER_CHR_DWN' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:FILTER_CHR_INP' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:GAWK_IMPUTED' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:GAWK_TRUTH' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:GL_TRUTH:GAWK' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:GL_TRUTH:TABIX_BGZIP' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:LIST_TO_FILE' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:MULTIQC' {
    cpus = { 2 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:SAMTOOLS_COVERAGE_DWN' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:SAMTOOLS_COVERAGE_INP' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:SPLIT_IMPUTED:BCFTOOLS_PLUGINSPLIT' {
    cpus = { 2 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:SPLIT_TRUTH:BCFTOOLS_PLUGINSPLIT' {
    cpus = { 2 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:VCF_CHUNK_GLIMPSE:GLIMPSE2_CHUNK' {
    cpus = { 2 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:VCF_CHUNK_GLIMPSE:GLIMPSE_CHUNK' {
    cpus = { 2 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:VCF_CONCORDANCE_GLIMPSE2:ADD_COLUMNS' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:VCF_CONCORDANCE_GLIMPSE2:GAWK' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:VCF_CONCORDANCE_GLIMPSE2:GAWK_ERROR_SPL' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:VCF_CONCORDANCE_GLIMPSE2:GAWK_RSQUARE_SPL' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:VCF_CONCORDANCE_GLIMPSE2:GLIMPSE2_CONCORDANCE' {
    cpus = { 2 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:VCF_CONCORDANCE_GLIMPSE2:GUNZIP' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:VCF_NORMALIZE_BCFTOOLS:BCFTOOLS_NORM' {
    cpus = { 3 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:VCF_NORMALIZE_BCFTOOLS:BCFTOOLS_VIEW' {
    cpus = { 3 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:VCF_SITES_EXTRACT_BCFTOOLS:BCFTOOLS_CONVERT' {
    cpus = { 3 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_PHASEIMPUTE:PHASEIMPUTE:VCF_SITES_EXTRACT_BCFTOOLS:BCFTOOLS_VIEW' {
    cpus = { 2 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'PIPELINE_INITIALISATION:SAMTOOLS_FAIDX' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  errorStrategy = 'retry'
  maxRetries = 2
}
