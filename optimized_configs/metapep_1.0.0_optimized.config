process {
  withName: 'NFCORE_METAPEP:METAPEP:ASSIGN_NUCL_ENTITY_WEIGHTS' {
    cpus = { 4 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_METAPEP:METAPEP:COLLECT_STATS' {
    cpus = { 1 * task.attempt }
    memory = { 24.GB * task.attempt }
  }
  withName: 'NFCORE_METAPEP:METAPEP:CREATE_PROTEIN_TSV' {
    cpus = { 2 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_METAPEP:METAPEP:FINALIZE_MICROBIOME_ENTITIES' {
    cpus = { 6 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_METAPEP:METAPEP:GENERATE_PEPTIDES' {
    memory = { 5.GB * task.attempt }
  }
  withName: 'NFCORE_METAPEP:METAPEP:GENERATE_PROTEIN_AND_ENTITY_IDS' {
    cpus = { 3 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_METAPEP:METAPEP:MERGE_PREDICTIONS' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_METAPEP:METAPEP:MULTIQC' {
    cpus = { 3 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_METAPEP:METAPEP:PLOT_ENTITY_BINDING_RATIOS' {
    cpus = { 2 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_METAPEP:METAPEP:PLOT_SCORE_DISTRIBUTION' {
    cpus = { 19 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_METAPEP:METAPEP:PREDICT_EPITOPES' {
    cpus = { 21 * task.attempt }
    memory = { 6.GB * task.attempt }
  }
  withName: 'NFCORE_METAPEP:METAPEP:PREPARE_ENTITY_BINDING_RATIOS' {
    cpus = { 1 * task.attempt }
    memory = { 47.GB * task.attempt }
  }
  withName: 'NFCORE_METAPEP:METAPEP:PREPARE_SCORE_DISTRIBUTION' {
    cpus = { 1 * task.attempt }
    memory = { 44.GB * task.attempt }
  }
  withName: 'NFCORE_METAPEP:METAPEP:PROCESS_INPUT:CHECK_SAMPLESHEET_CREATE_TABLES' {
    cpus = { 7 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_METAPEP:METAPEP:PRODIGAL' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'NFCORE_METAPEP:METAPEP:SPLIT_PRED_TASKS' {
    cpus = { 1 * task.attempt }
    memory = { 34.GB * task.attempt }
  }
  errorStrategy = 'retry'
  maxRetries = 2
}
